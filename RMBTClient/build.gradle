apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

dependencies {
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.5'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '5.0.4'
    compile group: 'dnsjava', name: 'dnsjava', version: '2.1.8'
    compile project(':RMBTSharedCode')
    compile project(':RMBTUtil')

    testImplementation group: 'org.jmockit', name: 'jmockit', version: '1.45'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main {
        resources { srcDir 'src' }
    }
}

subprojects{
    evaluationDependsOn(':RMBTSharedCode')
    evaluationDependsOn(':RMBTUtil')
}

jar {
    manifest {
        attributes 'Main-Class': 'at.rtr.rmbt.client.RMBTClientRunner'
    }
}

shadowJar {
    baseName = 'RMBTClient'
}

def revisionPropertiesFile = file("${buildDir}/resources/main/revision.properties")
processResources {
    doLast {
        String revisionProperties = "git.describe=" + getVersionNameFromGit() + "\n"
        revisionProperties = revisionProperties + "git.branch=" + getBranchFromGit() + "\n"
        revisionProperties = revisionProperties + "git.dirty=" + getDirtyFromGit() + "\n"
        revisionProperties = revisionProperties + "git.id=" + getHashFromGit() + "\n"
        revisionProperties = revisionProperties + "git.revision=" + getVersionCodeFromGit() + "\n"
        revisionPropertiesFile.write(revisionProperties, 'UTF-8')
    }
}

test {
    jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }.absolutePath}"
}